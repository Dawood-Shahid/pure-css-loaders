{"version":3,"sources":["classes/Loader.ts","classes/LoaderHeart.ts","constants/getLoadersData.ts","components/LoaderInfo/index.tsx","components/LoaderInfo/LoaderInfo.tsx","components/Loaders/index.tsx","components/Loaders/Loaders.tsx","containers/LandingPage/index.tsx","containers/LandingPage/LandingPage.tsx","assets/logo/iomechs-logo.png","containers/Header/index.tsx","containers/Header/Header.tsx","App.tsx","index.tsx"],"names":["Loader","name","id","size","color","html","cssRules","this","CleanCSS","format","minify","styles","changes","styleSheet","parse","forEach","change","stylesheet","rules","filter","rule","i","type","selectors","find","selector","Object","keys","replacements","property","declaration","declarations","dec","value","stringify","LoaderHeart","bumpPosition","tailSize","oldSizeInt","parseInt","newSizeInt","percentage","bumpPos","width","height","top","left","replacedStyles","Loaders","LCircle","LDefault","LDualRing","LEllipsis","LFacebook","LGrid","LHeart","LHourglass","LRing","LRipple","LRoller","LSpinner","LoaderInfo","modalShown","handleCloseModal","loader","useState","loaderInfo","setLoaderInfo","setSize","updateLoader","useCallback","sizeToUse","loaderUpdated","cloneDeep","transform","console","log","useEffect","updateSize","sizeStr","Modal","show","onHide","Header","closeButton","Title","Body","Style","it","className","dangerouslySetInnerHTML","__html","Form","Group","controlId","Label","Control","onChange","e","target","defaultValue","min","max","placeholder","contentEditable","suppressContentEditableWarning","Badge","bg","onClick","navigator","clipboard","writeText","style","marginTop","marginBottom","backgroundColor","loaders","setLoaders","setModalShown","selectedLoader","setSelectedLoader","loaderContainerRef","useRef","addStyleOnDOM","styleEle","document","createElement","innerText","map","loaderData","join","current","append","LoadersData","showLoaderDetails","ref","Children","toArray","LandingPage","href","rel","src","logo","alt","baseName","process","APP_BASE_NAME","App","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.799c6bf2.chunk.js","sourcesContent":["import ILoader from '../Interfaces/Loader';\nimport CleanCSS from 'clean-css';\nimport { parse, stringify } from 'css';\nimport StyleChange from '../Interfaces/StyleChange';\nclass Loader implements ILoader {\n  name: string;\n  id: string;\n  size: string;\n  color: string;\n  html: string;\n  cssRules: string;\n  constructor({\n    name,\n    id,\n    size,\n    color,\n    html,\n    cssRules,\n  }: Omit<ILoader, 'transform'>) {\n    this.name = name;\n    this.id = id;\n    this.size = size;\n    this.color = color;\n    this.html = html;\n    this.cssRules = new CleanCSS({ format: 'beautify' }).minify(\n      cssRules\n    ).styles;\n  }\n\n  replaceStyles(changes: StyleChange[]): string {\n    const styleSheet = parse(this.cssRules);\n    changes.forEach((change: any) => {\n      const rules = styleSheet.stylesheet!.rules!.filter((rule: any, i) => {\n        return (\n          rule.type === 'rule' &&\n          rule.selectors.find(\n            (selector: string) => selector === change.selector\n          )\n        );\n      });\n      rules.forEach((rule: any) => {\n        Object.keys(change.replacements).forEach((property) => {\n          const declaration = rule.declarations.find(\n            (dec: any) => dec.property === property\n          );\n          if (declaration) {\n            declaration.value = change.replacements[property];\n          }\n        });\n      });\n    });\n    return stringify(styleSheet);\n  }\n\n  transform(size: string, color: string): Loader {\n    return this;\n  }\n\n  clone() {\n    return new Loader({ ...this });\n  }\n}\n\nexport default Loader;\n","import Loader from './Loader';\nimport StyleChange from '../Interfaces/StyleChange';\nclass LoaderHeart extends Loader {\n  bumpPosition = -24;\n  tailSize = 32;\n  transform(size: string, color: string) {\n    const oldSizeInt = parseInt(this.size, 10);\n    const newSizeInt = parseInt(size, 10);\n    const percentage = (newSizeInt / oldSizeInt) * 100;\n    const bumpPos = (this.bumpPosition * percentage) / 100;\n    const tailSize = (this.tailSize * percentage) / 100;\n    const changes: StyleChange[] = [\n      {\n        selector: '.lds-heart',\n        replacements: {\n          width: `${newSizeInt}px`,\n          height: `${newSizeInt}px`,\n          'transform-origin': `unset`,\n        },\n      },\n      {\n        selector: '.lds-heart div',\n        replacements: {\n          top: `${tailSize}px`,\n          left: `${tailSize}px`,\n          width: `${tailSize}px`,\n          height: `${tailSize}px`,\n        },\n      },\n      {\n        selector: '.lds-heart div:after',\n        replacements: {\n          top: `${bumpPos}px`,\n          left: `${bumpPos}px`,\n          width: `${tailSize}px`,\n          height: `${tailSize}px`,\n        },\n      },\n      {\n        selector: '.lds-heart div:before',\n        replacements: {\n          top: `${bumpPos}px`,\n          left: `${bumpPos}px`,\n          width: `${tailSize}px`,\n          height: `${tailSize}px`,\n        },\n      },\n    ];\n    const replacedStyles = super.replaceStyles(changes);\n    return {\n      ...this,\n      cssRules: replacedStyles,\n    };\n  }\n  clone() {\n    return new LoaderHeart({ ...this });\n  }\n}\n\nexport default LoaderHeart;\n","import LCircle from '../assets/lds-circle.json';\nimport LDefault from '../assets/lds-default.json';\nimport LDualRing from '../assets/lds-dual-ring.json';\nimport LEllipsis from '../assets/lds-ellipsis.json';\nimport LFacebook from '../assets/lds-facebook.json';\nimport LGrid from '../assets/lds-grid.json';\nimport LHeart from '../assets/lds-heart.json';\nimport LHourglass from '../assets/lds-hourglass.json';\nimport LRing from '../assets/lds-ring.json';\nimport LRipple from '../assets/lds-ripple.json';\nimport LRoller from '../assets/lds-roller.json';\nimport LSpinner from '../assets/lds-spinner.json';\nimport Loader from '../classes/Loader';\nimport LoaderHeart from '../classes/LoaderHeart';\n\nconst Loaders: Loader[] = [\n  new Loader(LCircle),\n  new Loader(LDefault),\n  new Loader(LDualRing),\n  new Loader(LEllipsis),\n  new Loader(LFacebook),\n  new Loader(LGrid),\n  new LoaderHeart(LHeart),\n  new Loader(LHourglass),\n  new Loader(LRing),\n  new Loader(LRipple),\n  new Loader(LRoller),\n  new Loader(LSpinner),\n];\nexport default Loaders;\n","import LoaderInfo from './LoaderInfo';\n\nexport default LoaderInfo;\n","import Modal from 'react-bootstrap/Modal';\nimport './LoaderInfo.css';\nimport { Badge, Form } from 'react-bootstrap';\nimport { useCallback, useEffect, useState } from 'react';\nimport Loader from '../../classes/Loader';\nimport cloneDeep from 'lodash/cloneDeep';\nimport Style from 'style-it';\n\ntype Props = {\n  modalShown: boolean;\n  handleCloseModal: () => void;\n  loader: Loader;\n};\n\nconst LoaderInfo: React.FC<Props> = ({\n  modalShown,\n  handleCloseModal,\n  loader,\n}) => {\n  const [loaderInfo, setLoaderInfo] = useState<Loader>();\n  const [size, setSize] = useState<number>(parseInt(loader.size, 10));\n\n  const updateLoader = useCallback(() => {\n    if (!loader) return;\n    const sizeToUse = size;\n    if (!sizeToUse) return;\n    const loaderUpdated = cloneDeep(loader).transform(`${sizeToUse}px`, '');\n    console.log(loaderUpdated.cssRules);\n    setLoaderInfo(loaderUpdated);\n  }, [loader, size]);\n\n  useEffect(() => {\n    if (loader) {\n      updateLoader();\n    }\n  }, [loader, size, updateLoader]);\n\n  const resetModal = () => {\n    setLoaderInfo(cloneDeep(loader));\n    updateSize(loader.size);\n  };\n\n  const updateSize = (sizeStr: string) => {\n    setSize(parseInt(sizeStr, 10));\n  };\n\n  return (\n    <Modal\n      show={modalShown}\n      size=\"lg\"\n      onHide={() => {\n        handleCloseModal();\n        resetModal();\n      }}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{loaderInfo?.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {Style.it(\n          loaderInfo?.cssRules,\n          <div className=\"modal-loader-wrapper\">\n            <div\n              className=\"modal-loader\"\n              dangerouslySetInnerHTML={{ __html: loaderInfo?.html || '' }}\n            />\n          </div>\n        )}\n\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"loaderSize\">\n            <Form.Label>Loader Size (px)</Form.Label>\n            <Form.Control\n              onChange={(e) => {\n                updateSize(e.target.value);\n              }}\n              defaultValue={size}\n              type=\"number\"\n              min={10}\n              max={500}\n              placeholder=\"Enter loader size\"\n            />\n          </Form.Group>\n        </Form>\n        <h6 className=\"modal-html-text-header\">HTML</h6>\n        <div contentEditable={true} suppressContentEditableWarning={true}>\n          <div className=\"modal-html-text\">\n            {loaderInfo?.html}\n            <Badge\n              className=\"badge\"\n              contentEditable={false}\n              bg=\"secondary\"\n              onClick={() => {\n                navigator.clipboard.writeText(loaderInfo?.html || '');\n              }}\n            >\n              Copy\n            </Badge>{' '}\n          </div>\n        </div>\n        <div\n          style={{\n            marginTop: '10px',\n            marginBottom: '10px',\n            backgroundColor: '#333',\n            height: '1px',\n            width: '100%',\n          }}\n        ></div>\n        <h6 className=\"modal-css-text-header\">CSS</h6>\n        <pre\n          contentEditable={true}\n          suppressContentEditableWarning={true}\n          className=\"css-container\"\n        >\n          <Badge\n            className=\"badge\"\n            contentEditable={false}\n            bg=\"secondary\"\n            onClick={() => {\n              navigator.clipboard.writeText(loaderInfo?.cssRules || '');\n            }}\n          >\n            Copy\n          </Badge>{' '}\n          {loaderInfo?.cssRules}\n        </pre>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default LoaderInfo;\n","import Loaders from './Loaders';\n\nexport default Loaders;","import { useEffect, useState, Children, useRef, useCallback } from 'react';\nimport LoadersData from '../../constants/getLoadersData';\nimport './style.css';\nimport LoaderInfo from '../LoaderInfo';\nimport Loader from '../../classes/Loader';\n\nconst LoadersComponent = () => {\n  const [loaders, setLoaders] = useState<Loader[] | []>([]);\n  const [modalShown, setModalShown] = useState(false);\n\n  const handleCloseModal = () => setModalShown(false);\n  const handleShowModal = () => setModalShown(true);\n\n  const [selectedLoader, setSelectedLoader] = useState<Loader | null>(null);\n  const loaderContainerRef = useRef<HTMLDivElement>(null);\n\n  const addStyleOnDOM = useCallback(() => {\n    const styleEle = document.createElement('Style');\n    styleEle.innerText = loaders\n      .map((loaderData) => loaderData.cssRules)\n      .join('');\n    if (loaderContainerRef && loaderContainerRef.current) {\n      loaderContainerRef.current.append(styleEle);\n    }\n  }, [loaders]);\n\n  useEffect(() => {\n    setLoaders([...LoadersData]);\n  }, []);\n\n  useEffect(() => {\n    addStyleOnDOM();\n  }, [addStyleOnDOM]);\n\n  const showLoaderDetails = (loader: Loader) => {\n    setSelectedLoader(loader);\n    handleShowModal();\n  };\n  return (\n    <div ref={loaderContainerRef} className=\"loaders-container\">\n      {Children.toArray(\n        loaders.map((loaderData) => (\n          <div\n            className=\"loader-body\"\n            onClick={() => showLoaderDetails(loaderData)}\n          >\n            <div dangerouslySetInnerHTML={{ __html: loaderData.html }} />\n            <p className=\"source-text\">Source &#60;&#47;&#62;</p>\n          </div>\n        ))\n      )}\n      {selectedLoader && (\n        <LoaderInfo\n          loader={selectedLoader}\n          modalShown={modalShown}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LoadersComponent;\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import './LandingPage.css';\nimport Loaders from '../../components/Loaders';\n\nconst LandingPage = () => {\n  return (\n    <div className=\"landing-page\">\n      <div className=\"landing-page__content\">\n        <Loaders />\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","export default __webpack_public_path__ + \"static/media/iomechs-logo.7eca13a5.png\";","import Header from './Header';\n\nexport default Header;\n","import './style.css';\nimport logo from '../../assets/logo/iomechs-logo.png';\nimport GitHubButton from 'react-github-btn';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header_container\">\n        <a\n          href=\"https://iomechs.com\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          className=\"logo_container\"\n        >\n          <img className=\"logo\" src={logo} alt=\"IOMechs Logo\" />\n        </a>\n        <div className=\"title header_text\">Pure CSS Loaders (configurable)</div>\n        <div className=\"repo_link_container header_text\">\n          <span> Like Pure CSS Loaders? Give our repo a &nbsp; </span>\n          <GitHubButton\n            href=\"https://github.com/iomechs/pure-css-loaders\"\n            data-icon=\"octicon-star\"\n            aria-label=\"Star iomechs/pure-css-loaders on GitHub\"\n          >\n            Star\n          </GitHubButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport LandingPage from './containers/LandingPage';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './containers/Header';\n\nconst baseName = process.env.APP_BASE_NAME || '';\n\nfunction App() {\n  return (\n    <Router basename={baseName}>\n      <Header />\n      <div className=\"app\">\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-wrapper\">\n      <App />\n      <div className=\"credits\">\n        <h5>Credits:</h5>\n        <a\n          className=\"credit-link light\"\n          href=\"https://loading.io/css\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Based on Pure CSS Loaders\n        </a>\n        <a\n          className=\"credit-link light\"\n          href=\"https://www.freepik.com/vectors/background\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Background vector created by rocketpixel - www.freepik.com\n        </a>\n      </div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}