{"version":3,"sources":["classes/Loader.ts","classes/LoaderCircle.ts","classes/LoaderFacebook.ts","classes/LoaderHeart.ts","constants/getLoadersData.ts","components/LoaderInfo/index.tsx","components/LoaderInfo/LoaderInfo.tsx","components/Loaders/index.tsx","components/Loaders/Loaders.tsx","containers/LandingPage/index.tsx","containers/LandingPage/LandingPage.tsx","assets/logo/iomechs-logo.png","containers/Header/index.tsx","containers/Header/Header.tsx","App.tsx","index.tsx"],"names":["Loader","name","id","size","color","html","cssRules","this","CleanCSS","format","minify","styles","changes","styleSheet","parse","forEach","change","stylesheet","rules","filter","rule","i","type","selectors","find","selector","Object","keys","replacements","property","declaration","declarations","dec","value","stringify","keyVal","keyframes","keyframe","values","some","val","LoaderCircle","newSizeInt","parseInt","width","height","background","replacedStyles","LoaderFacebook","keyFrame0top","keyFrame0height","keyFrame100height","keyFrame100top","ruleChanges","left","toFixed","keyframesChanges","top","LoaderHeart","bumpPosition","tailSize","oldSizeInt","percentage","bumpPos","Loaders","LCircle","LDefault","LDualRing","LEllipsis","LFacebook","LGrid","LHeart","LHourglass","LRing","LRipple","LRoller","LSpinner","LoaderInfo","modalShown","handleCloseModal","loader","useState","loaderInfo","setLoaderInfo","setSize","setColor","showColorPicker","setShowColorPicker","colorInputRef","useRef","updateLoader","useCallback","sizeToUse","loaderUpdated","cloneDeep","transform","console","log","useEffect","updateSize","sizeStr","toggleColorPickerShow","show","Modal","onHide","Header","closeButton","Title","Body","Style","it","className","dangerouslySetInnerHTML","__html","Form","Group","controlId","Label","Control","onChange","e","target","defaultValue","min","max","placeholder","InputGroup","ref","onFocus","onBlur","setTimeout","Text","onClick","current","focus","style","backgroundColor","onChangeComplete","hex","contentEditable","suppressContentEditableWarning","Badge","bg","navigator","clipboard","writeText","marginTop","marginBottom","loaders","setLoaders","setModalShown","selectedLoader","setSelectedLoader","loaderContainerRef","addStyleOnDOM","styleEle","document","createElement","innerText","map","loaderData","join","append","LoadersData","showLoaderDetails","Children","toArray","LandingPage","href","rel","src","logo","alt","baseName","process","APP_BASE_NAME","App","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"6oXAkGeA,E,WAtFb,cAOgC,IAN9BC,EAM6B,EAN7BA,KACAC,EAK6B,EAL7BA,GACAC,EAI6B,EAJ7BA,KACAC,EAG6B,EAH7BA,MACAC,EAE6B,EAF7BA,KACAC,EAC6B,EAD7BA,SAC6B,yBAb/BL,UAa+B,OAZ/BC,QAY+B,OAX/BC,UAW+B,OAV/BC,WAU+B,OAT/BC,UAS+B,OAR/BC,cAQ+B,EAC7BC,KAAKN,KAAOA,EACZM,KAAKL,GAAKA,EACVK,KAAKJ,KAAOA,EACZI,KAAKH,MAAQA,EACbG,KAAKF,KAAOA,EACZE,KAAKD,SAAW,IAAIE,IAAS,CAAEC,OAAQ,aAAcC,OACnDJ,GACAK,O,iDAGJ,SAAcC,GACZ,IAAMC,EAAaC,gBAAMP,KAAKD,UAsB9B,OApBAM,EAAQG,SAAQ,SAACC,GACDH,EAAWI,WAAYC,MAAOC,QAAO,SAACC,EAAWC,GAC7D,MACgB,SAAdD,EAAKE,MACLF,EAAKG,UAAUC,MACb,SAACC,GAAD,OAAsBA,IAAaT,EAAOS,eAI1CV,SAAQ,SAACK,GACbM,OAAOC,KAAKX,EAAOY,cAAcb,SAAQ,SAACc,GACxC,IAAMC,EAAcV,EAAKW,aAAaP,MACpC,SAACQ,GAAD,OAAcA,EAAIH,WAAaA,KAE7BC,IACFA,EAAYG,MAAQjB,EAAOY,aAAaC,aAKzCK,oBAAUrB,K,mCAGnB,SAAsBD,EAA2BN,GAC/C,IAAMO,EAAaC,gBAAK,OAACR,QAAD,IAACA,IAAWC,KAAKD,UA6BzC,OA3BAM,EAAQG,SAAQ,SAACC,GACGH,EAAWI,WAAYC,MAAMC,QAAO,SAACC,EAAWC,GAChE,MACgB,cAAdD,EAAKE,MACLF,EAAKnB,OAASe,EAAOS,YAGfV,SAAQ,SAACK,GACjBM,OAAOC,KAAKX,EAAOY,cAAcb,SAAQ,SAACoB,GACxCf,EAAKgB,UAAUrB,SAAQ,SAACsB,GACFA,EAASC,OAAOC,MAClC,SAACC,GAAD,OAAiBA,IAAQL,MAGzBT,OAAOC,KAAKX,EAAOY,aAAaO,IAASpB,SAAQ,SAACc,GAChD,IAAMC,EAAcO,EAASN,aAAaP,MACxC,SAACQ,GAAD,OAAcA,EAAIH,WAAaA,KAE7BC,IACFA,EAAYG,MAAQjB,EAAOY,aAAaO,GAAQN,mBAQvDK,oBAAUrB,K,uBAGnB,SAAUV,EAAcC,GACtB,OAAOG,O,mBAGT,WACE,OAAO,IAAIP,EAAJ,eAAgBO,W,qCCjEZkC,E,+JAzBb,SAAUtC,EAAcC,GACtB,IAAMsC,EAAaC,SAASxC,EAAM,IAE5BS,EAAyB,CAC7B,CACEa,SAAU,oBACVG,aAAc,CACZgB,MAAM,GAAD,OAAKF,EAAL,MACLG,OAAO,GAAD,OAAKH,EAAL,MACNI,WAAY1C,KAId2C,EAAc,qEAAuBnC,GAEzC,OAAO,2BACFL,MADL,IAEED,SAAUyC,M,mBAGd,WACE,OAAO,IAAIN,EAAJ,eAAsBlC,W,GAtBNP,GC2EZgD,E,+JA1Eb,SAAU7C,EAAcC,GACtB,IAAMsC,EAAaC,SAASxC,EAAM,IAE5B8C,EAA4B,GAAbP,EACfQ,EAAkBR,EAA4B,EAAfO,EAC/BE,EAAoBD,EAAkB,EACtCE,GAAkBV,EAAaS,GAAqB,EAEpDE,EAA6B,CACjC,CACE5B,SAAU,gBACVG,aAAc,CACZgB,MAAM,GAAD,OAAKF,EAAL,MACLG,OAAO,GAAD,OAAKH,EAAL,QAGV,CACEjB,SAAU,oBACVG,aAAc,CACZgB,MAAM,GAAD,OAAkB,GAAbF,EAAL,MACLI,WAAY1C,IAGhB,CACEqB,SAAU,iCACVG,aAAc,CACZ0B,KAAK,GAAD,OAAkB,GAAbZ,EAAL,QAGR,CACEjB,SAAU,iCACVG,aAAc,CACZ0B,KAAK,GAAD,OAAkB,GAAbZ,EAAL,QAGR,CACEjB,SAAU,iCACVG,aAAc,CACZ0B,KAAK,GAAD,QAAmB,GAAbZ,GAAkBa,QAAQ,GAAhC,SAINR,EAAc,qEAAuBM,GAEnCG,EAAqC,CACzC,CACE/B,SAAU,eACVG,aAAc,CACZ,KAAM,CACJ6B,IAAI,GAAD,OAAKR,EAAL,MACHJ,OAAO,GAAD,OAAKK,EAAL,OAER,OAAQ,CACNO,IAAI,GAAD,OAAKL,EAAL,MACHP,OAAO,GAAD,OAAKM,EAAL,UAUd,OALAJ,EAAc,6EACZS,EACAT,GAGK,2BACFxC,MADL,IAEED,SAAUyC,M,mBAGd,WACE,OAAO,IAAIC,EAAJ,eAAwBzC,W,GAvENP,GC2Dd0D,E,4MA3DbC,cAAgB,G,EAChBC,SAAW,G,+CACX,SAAUzD,EAAcC,GACtB,IAAMyD,EAAalB,SAASpC,KAAKJ,KAAM,IACjCuC,EAAaC,SAASxC,EAAM,IAC5B2D,EAAcpB,EAAamB,EAAc,IACzCE,EAAWxD,KAAKoD,aAAeG,EAAc,IAC7CF,EAAYrD,KAAKqD,SAAWE,EAAc,IAC1ClD,EAAyB,CAC7B,CACEa,SAAU,aACVG,aAAc,CACZgB,MAAM,GAAD,OAAKF,EAAL,MACLG,OAAO,GAAD,OAAKH,EAAL,MACN,mBAAmB,UAGvB,CACEjB,SAAU,iBACVG,aAAc,CACZ6B,IAAI,GAAD,OAAKG,EAAL,MACHN,KAAK,GAAD,OAAKM,EAAL,MACJhB,MAAM,GAAD,OAAKgB,EAAL,MACLf,OAAO,GAAD,OAAKe,EAAL,MACNd,WAAY1C,IAGhB,CACEqB,SAAU,uBACVG,aAAc,CACZ6B,IAAI,GAAD,OAAKM,EAAL,MACHT,KAAK,GAAD,OAAKS,EAAL,MACJnB,MAAM,GAAD,OAAKgB,EAAL,MACLf,OAAO,GAAD,OAAKe,EAAL,MACNd,WAAY1C,IAGhB,CACEqB,SAAU,wBACVG,aAAc,CACZ6B,IAAI,GAAD,OAAKM,EAAL,MACHT,KAAK,GAAD,OAAKS,EAAL,MACJnB,MAAM,GAAD,OAAKgB,EAAL,MACLf,OAAO,GAAD,OAAKe,EAAL,MACNd,WAAY1C,KAIZ2C,EAAc,qEAAuBnC,GAC3C,OAAO,2BACFL,MADL,IAEED,SAAUyC,M,mBAGd,WACE,OAAO,IAAIW,EAAJ,eAAqBnD,W,GAxDNP,GC6BXgE,EAdW,CACxB,IAAIvB,EAAawB,GACjB,IAAIjE,EAAOkE,GACX,IAAIlE,EAAOmE,GACX,IAAInE,EAAOoE,GACX,IAAIpB,EAAeqB,GACnB,IAAIrE,EAAOsE,GACX,IAAIZ,EAAYa,GAChB,IAAIvE,EAAOwE,GACX,IAAIxE,EAAOyE,GACX,IAAIzE,EAAO0E,GACX,IAAI1E,EAAO2E,GACX,IAAI3E,EAAO4E,I,wGC3BEC,ECcqB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,OAEA,EAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAAiBtC,SAASqC,EAAO7E,KAAM,KAA/D,mBAAOA,EAAP,KAAaiF,EAAb,KACA,EAA0BH,mBAAiBD,EAAO5E,OAAlD,mBAAOA,EAAP,KAAciF,EAAd,KACA,EAA8CJ,oBAAkB,GAAhE,mBAAOK,EAAP,KAAwBC,EAAxB,KACIC,EAAgBC,mBAEdC,EAAeC,uBAAY,WAC/B,GAAKX,EAAL,CACA,IAAMY,EAAYzF,EAClB,GAAKyF,EAAL,CACA,IAAMC,EAAgBC,IAAUd,GAAQe,UAAlB,UACjBH,EADiB,MAEpBxF,GAAgB,QAElB4F,QAAQC,IAAIJ,EAAcvF,UAC1B6E,EAAcU,OACb,CAACb,EAAQ7E,EAAMC,IAElB8F,qBAAU,WACJlB,GACFU,MAED,CAACV,EAAQ7E,EAAMuF,IAElB,IAOMS,EAAa,SAACC,GAClBhB,EAAQzC,SAASyD,EAAS,MAGtBC,EAAwB,SAACC,GAC7Bf,EAAmBe,IAGrB,OACE,eAACC,EAAA,EAAD,CACED,KAAMxB,EACN3E,KAAK,KACLqG,OAAQ,WACNzB,IAnBJI,EAAcW,IAAUd,IACxBmB,EAAWnB,EAAO7E,MAClBkF,EAASL,EAAO5E,OAChBiG,GAAsB,IAYtB,UAQE,cAACE,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMI,MAAP,iBAAczB,QAAd,IAAcA,OAAd,EAAcA,EAAYjF,SAE5B,eAACsG,EAAA,EAAMK,KAAP,WACGC,IAAMC,GAAN,OACC5B,QADD,IACCA,OADD,EACCA,EAAY5E,SACZ,qBAAKyG,UAAU,uBAAf,SACE,qBACEA,UAAU,eACVC,wBAAyB,CAAEC,QAAkB,OAAV/B,QAAU,IAAVA,OAAA,EAAAA,EAAY7E,OAAQ,SAK7D,eAAC6G,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYJ,UAAU,OAAOK,UAAU,aAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,+BACA,cAACH,EAAA,EAAKI,QAAN,CACEC,SAAU,SAACC,GACTrB,EAAWqB,EAAEC,OAAOxF,QAEtByF,aAAcvH,EACdmB,KAAK,SACLqG,IAAK,GACLC,IAAK,IACLC,YAAY,yBAGhB,cAACX,EAAA,EAAKG,MAAN,uCACA,eAACS,EAAA,EAAD,CAAYf,UAAU,0BAAtB,UACE,cAACG,EAAA,EAAKI,QAAN,CACES,IAAKvC,EACL+B,SAAU,SAACC,GACTnC,EAASmC,EAAEC,OAAOxF,QAEpB+F,QAAS,WACP3B,GAAsB,IAExB4B,OAAQ,WACNC,YAAW,WACT7B,GAAsB,KACrB,MAELpE,MAAO7B,EACPyH,YAAY,sBAEd,cAACC,EAAA,EAAWK,KAAZ,CACEC,QAAS,WACH5C,GACFA,EAAc6C,QAAQC,SAH5B,SAOE,qBACEC,MAAO,CAAEC,gBAAiBpI,EAAOwC,MAAO,GAAIC,OAAQ,QAIvDyC,GACC,qBAAKyB,UAAU,uCAAf,SACE,cAAC,IAAD,CACE0B,iBAAkB,YAAc,IAAXC,EAAU,EAAVA,IACnBrD,EAASqD,cAOrB,oBAAI3B,UAAU,yBAAd,kBACA,qBAAK4B,iBAAiB,EAAMC,gCAAgC,EAA5D,SACE,sBAAK7B,UAAU,kBAAf,iBACG7B,QADH,IACGA,OADH,EACGA,EAAY7E,KACb,cAACwI,EAAA,EAAD,CACE9B,UAAU,QACV4B,iBAAiB,EACjBG,GAAG,YACHV,QAAS,WACPW,UAAUC,UAAUC,WAAoB,OAAV/D,QAAU,IAAVA,OAAA,EAAAA,EAAY7E,OAAQ,KALtD,kBASS,SAGb,qBACEkI,MAAO,CACLW,UAAW,OACXC,aAAc,OACdX,gBAAiB,OACjB3F,OAAQ,MACRD,MAAO,UAGX,oBAAImE,UAAU,wBAAd,iBACA,sBACE4B,iBAAiB,EACjBC,gCAAgC,EAChC7B,UAAU,gBAHZ,UAKE,cAAC8B,EAAA,EAAD,CACE9B,UAAU,QACV4B,iBAAiB,EACjBG,GAAG,YACHV,QAAS,WACPW,UAAUC,UAAUC,WAAoB,OAAV/D,QAAU,IAAVA,OAAA,EAAAA,EAAY5E,WAAY,KAL1D,kBASS,IAdX,OAeG4E,QAfH,IAeGA,OAfH,EAeGA,EAAY5E,mBCjLR0D,ECIU,WACvB,MAA8BiB,mBAAwB,IAAtD,mBAAOmE,EAAP,KAAgBC,EAAhB,KACA,EAAoCpE,oBAAS,GAA7C,mBAAOH,EAAP,KAAmBwE,EAAnB,KAKA,EAA4CrE,mBAAwB,MAApE,mBAAOsE,EAAP,KAAuBC,EAAvB,KACMC,EAAqBhE,iBAAuB,MAE5CiE,EAAgB/D,uBAAY,WAChC,IAAMgE,EAAWC,SAASC,cAAc,SACxCF,EAASG,UAAYV,EAClBW,KAAI,SAACC,GAAD,OAAgBA,EAAW1J,YAC/B2J,KAAK,IACJR,GAAsBA,EAAmBpB,SAC3CoB,EAAmBpB,QAAQ6B,OAAOP,KAEnC,CAACP,IAEJlD,qBAAU,WACRmD,EAAW,YAAIc,MACd,IAEHjE,qBAAU,WACRwD,MACC,CAACA,IAEJ,IAAMU,EAAoB,SAACpF,GACzBwE,EAAkBxE,GAxBUsE,GAAc,IA4B5C,OACE,sBAAKvB,IAAK0B,EAAoB1C,UAAU,oBAAxC,UACGsD,WAASC,QACRlB,EAAQW,KAAI,SAACC,GAAD,OACV,sBACEjD,UAAU,cACVqB,QAAS,kBAAMgC,EAAkBJ,IAFnC,UAIE,qBAAKhD,wBAAyB,CAAEC,OAAQ+C,EAAW3J,QACnD,mBAAG0G,UAAU,cAAb,+BAILwC,GACC,cAAC,EAAD,CACEvE,OAAQuE,EACRzE,WAAYA,EACZC,iBA9CiB,kBAAMuE,GAAc,UCRhCiB,ECCK,WAClB,OACE,qBAAKxD,UAAU,eAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,S,iBCPO,G,OAAA,IAA0B,0C,SCE1BN,ECEA,WACb,OACE,qBAAKM,UAAU,SAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,mBACEyD,KAAK,sBACLC,IAAI,sBACJhD,OAAO,SACPV,UAAU,iBAJZ,SAME,qBAAKA,UAAU,OAAO2D,IAAKC,EAAMC,IAAI,mBAEvC,qBAAK7D,UAAU,oBAAf,6CACA,sBAAKA,UAAU,kCAAf,UACE,iFACA,cAAC,IAAD,CACEyD,KAAK,8CACL,YAAU,eACV,aAAW,0CAHb,2BCbJK,GAAWC,mIAAYC,eAAiB,GAmB/BC,OAjBf,WACE,OACE,eAAC,IAAD,CAAQC,SAAUJ,GAAlB,UACE,cAAC,EAAD,IACA,qBAAK9D,UAAU,MAAf,SAGE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOmE,KAAK,IAAZ,SACE,cAAC,EAAD,c,OCTZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,sBAAKtE,UAAU,cAAf,UACE,cAAC,GAAD,IACA,sBAAKA,UAAU,UAAf,UACE,0CACA,mBACEA,UAAU,oBACVyD,KAAK,yBACL/C,OAAO,SACPgD,IAAI,sBAJN,uCAQA,mBACE1D,UAAU,oBACVyD,KAAK,6CACL/C,OAAO,SACPgD,IAAI,sBAJN,gFAWNb,SAAS0B,eAAe,W","file":"static/js/main.daf8e7da.chunk.js","sourcesContent":["import ILoader from '../Interfaces/Loader';\nimport CleanCSS from 'clean-css';\nimport { parse, stringify } from 'css';\nimport StyleChange from '../Interfaces/StyleChange';\nimport KeyframeChange from '../Interfaces/KeyframeChange';\nclass Loader implements ILoader {\n  name: string;\n  id: string;\n  size: string;\n  color: string;\n  html: string;\n  cssRules: string;\n  constructor({\n    name,\n    id,\n    size,\n    color,\n    html,\n    cssRules,\n  }: Omit<ILoader, 'transform'>) {\n    this.name = name;\n    this.id = id;\n    this.size = size;\n    this.color = color;\n    this.html = html;\n    this.cssRules = new CleanCSS({ format: 'beautify' }).minify(\n      cssRules\n    ).styles;\n  }\n\n  replaceStyles(changes: StyleChange[]): string {\n    const styleSheet = parse(this.cssRules);\n\n    changes.forEach((change: any) => {\n      const rules = styleSheet.stylesheet!.rules!.filter((rule: any, i) => {\n        return (\n          rule.type === 'rule' &&\n          rule.selectors.find(\n            (selector: string) => selector === change.selector\n          )\n        );\n      });\n      rules.forEach((rule: any) => {\n        Object.keys(change.replacements).forEach((property) => {\n          const declaration = rule.declarations.find(\n            (dec: any) => dec.property === property\n          );\n          if (declaration) {\n            declaration.value = change.replacements[property];\n          }\n        });\n      });\n    });\n    return stringify(styleSheet);\n  }\n\n  replaceKeyframeStyles(changes: KeyframeChange[], cssRules?: string): string {\n    const styleSheet = parse(cssRules?? this.cssRules);\n\n    changes.forEach((change: any) => {\n      const keyframes = styleSheet.stylesheet!.rules.filter((rule: any, i) => {\n        return (\n          rule.type === 'keyframes' &&\n          rule.name === change.selector\n        );\n      });\n      keyframes.forEach((rule: any) => {\n        Object.keys(change.replacements).forEach((keyVal) => {\n          rule.keyframes.forEach((keyframe: any) => {\n            const keyframeVal = keyframe.values.some(\n              (val: string) => val === keyVal\n            )\n            if (keyframeVal) {\n              Object.keys(change.replacements[keyVal]).forEach((property) => {\n                const declaration = keyframe.declarations.find(\n                  (dec: any) => dec.property === property\n                );\n                if (declaration) {\n                  declaration.value = change.replacements[keyVal][property];\n                }\n              });\n            }\n          });\n        });\n      });\n    });\n    return stringify(styleSheet);\n  }\n\n  transform(size: string, color: string): Loader {\n    return this;\n  }\n\n  clone() {\n    return new Loader({ ...this });\n  }\n}\n\nexport default Loader;\n","import Loader from './Loader';\nimport StyleChange from '../Interfaces/StyleChange';\n\nclass LoaderCircle extends Loader {\n  transform(size: string, color: string) {\n    const newSizeInt = parseInt(size, 10);\n\n    const changes: StyleChange[] = [\n      {\n        selector: '.lds-circle > div',\n        replacements: {\n          width: `${newSizeInt}px`,\n          height: `${newSizeInt}px`,\n          background: color,\n        },\n      },\n    ];\n    let replacedStyles = super.replaceStyles(changes);\n\n    return {\n      ...this,\n      cssRules: replacedStyles,\n    };\n  }\n  clone() {\n    return new LoaderCircle({ ...this });\n  }\n}\n\nexport default LoaderCircle;","import Loader from './Loader';\nimport StyleChange from '../Interfaces/StyleChange';\nimport KeyframeChange from '../Interfaces/KeyframeChange';\nclass LoaderFacebook extends Loader {\n  transform(size: string, color: string) {\n    const newSizeInt = parseInt(size, 10);\n\n    const keyFrame0top = newSizeInt * 0.1;\n    const keyFrame0height = newSizeInt - keyFrame0top * 2;\n    const keyFrame100height = keyFrame0height / 2;\n    const keyFrame100top = (newSizeInt - keyFrame100height) / 2;\n\n    const ruleChanges: StyleChange[] = [\n      {\n        selector: '.lds-facebook',\n        replacements: {\n          width: `${newSizeInt}px`,\n          height: `${newSizeInt}px`,\n        },\n      },\n      {\n        selector: '.lds-facebook div',\n        replacements: {\n          width: `${newSizeInt * 0.2}px`,\n          background: color,\n        },\n      },\n      {\n        selector: '.lds-facebook div:nth-child(1)',\n        replacements: {\n          left: `${newSizeInt * 0.1}px`,\n        },\n      },\n      {\n        selector: '.lds-facebook div:nth-child(2)',\n        replacements: {\n          left: `${newSizeInt * 0.4}px`,\n        },\n      },\n      {\n        selector: '.lds-facebook div:nth-child(3)',\n        replacements: {\n          left: `${(newSizeInt * 0.7).toFixed(1)}px`,\n        },\n      },\n    ];\n    let replacedStyles = super.replaceStyles(ruleChanges);\n\n    const keyframesChanges: KeyframeChange[] = [\n      {\n        selector: 'lds-facebook',\n        replacements: {\n          '0%': {\n            top: `${keyFrame0top}px`,\n            height: `${keyFrame0height}px`,\n          },\n          '100%': {\n            top: `${keyFrame100top}px`,\n            height: `${keyFrame100height}px`,\n          },\n        },\n      },\n    ];\n    replacedStyles = super.replaceKeyframeStyles(\n      keyframesChanges,\n      replacedStyles\n    );\n\n    return {\n      ...this,\n      cssRules: replacedStyles,\n    };\n  }\n  clone() {\n    return new LoaderFacebook({ ...this });\n  }\n}\n\nexport default LoaderFacebook;\n","import Loader from './Loader';\nimport StyleChange from '../Interfaces/StyleChange';\nclass LoaderHeart extends Loader {\n  bumpPosition = -24;\n  tailSize = 32;\n  transform(size: string, color: string) {\n    const oldSizeInt = parseInt(this.size, 10);\n    const newSizeInt = parseInt(size, 10);\n    const percentage = (newSizeInt / oldSizeInt) * 100;\n    const bumpPos = (this.bumpPosition * percentage) / 100;\n    const tailSize = (this.tailSize * percentage) / 100;\n    const changes: StyleChange[] = [\n      {\n        selector: '.lds-heart',\n        replacements: {\n          width: `${newSizeInt}px`,\n          height: `${newSizeInt}px`,\n          'transform-origin': `unset`,\n        },\n      },\n      {\n        selector: '.lds-heart div',\n        replacements: {\n          top: `${tailSize}px`,\n          left: `${tailSize}px`,\n          width: `${tailSize}px`,\n          height: `${tailSize}px`,\n          background: color,\n        },\n      },\n      {\n        selector: '.lds-heart div:after',\n        replacements: {\n          top: `${bumpPos}px`,\n          left: `${bumpPos}px`,\n          width: `${tailSize}px`,\n          height: `${tailSize}px`,\n          background: color,\n        },\n      },\n      {\n        selector: '.lds-heart div:before',\n        replacements: {\n          top: `${bumpPos}px`,\n          left: `${bumpPos}px`,\n          width: `${tailSize}px`,\n          height: `${tailSize}px`,\n          background: color,\n        },\n      },\n    ];\n    const replacedStyles = super.replaceStyles(changes);\n    return {\n      ...this,\n      cssRules: replacedStyles,\n    };\n  }\n  clone() {\n    return new LoaderHeart({ ...this });\n  }\n}\n\nexport default LoaderHeart;\n","import LCircle from '../assets/lds-circle.json';\nimport LDefault from '../assets/lds-default.json';\nimport LDualRing from '../assets/lds-dual-ring.json';\nimport LEllipsis from '../assets/lds-ellipsis.json';\nimport LFacebook from '../assets/lds-facebook.json';\nimport LGrid from '../assets/lds-grid.json';\nimport LHeart from '../assets/lds-heart.json';\nimport LHourglass from '../assets/lds-hourglass.json';\nimport LRing from '../assets/lds-ring.json';\nimport LRipple from '../assets/lds-ripple.json';\nimport LRoller from '../assets/lds-roller.json';\nimport LSpinner from '../assets/lds-spinner.json';\nimport Loader from '../classes/Loader';\nimport LoaderCircle from '../classes/LoaderCircle';\nimport LoaderFacebook from '../classes/LoaderFacebook';\nimport LoaderHeart from '../classes/LoaderHeart';\n\nconst Loaders: Loader[] = [\n  new LoaderCircle(LCircle),\n  new Loader(LDefault),\n  new Loader(LDualRing),\n  new Loader(LEllipsis),\n  new LoaderFacebook(LFacebook),\n  new Loader(LGrid),\n  new LoaderHeart(LHeart),\n  new Loader(LHourglass),\n  new Loader(LRing),\n  new Loader(LRipple),\n  new Loader(LRoller),\n  new Loader(LSpinner),\n];\nexport default Loaders;\n","import LoaderInfo from './LoaderInfo';\n\nexport default LoaderInfo;\n","import Modal from 'react-bootstrap/Modal';\nimport React from 'react';\nimport './LoaderInfo.css';\nimport { Badge, Form, InputGroup } from 'react-bootstrap';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport Loader from '../../classes/Loader';\nimport cloneDeep from 'lodash/cloneDeep';\nimport Style from 'style-it';\nimport { CirclePicker } from 'react-color';\n\ntype Props = {\n  modalShown: boolean;\n  handleCloseModal: () => void;\n  loader: Loader;\n};\n\nconst LoaderInfo: React.FC<Props> = ({\n  modalShown,\n  handleCloseModal,\n  loader,\n}) => {\n  const [loaderInfo, setLoaderInfo] = useState<Loader>();\n  const [size, setSize] = useState<number>(parseInt(loader.size, 10));\n  const [color, setColor] = useState<string>(loader.color);\n  const [showColorPicker, setShowColorPicker] = useState<boolean>(false);\n  let colorInputRef = useRef<any>();\n\n  const updateLoader = useCallback(() => {\n    if (!loader) return;\n    const sizeToUse = size;\n    if (!sizeToUse) return;\n    const loaderUpdated = cloneDeep(loader).transform(\n      `${sizeToUse}px`,\n      color ? color : '#333'\n    );\n    console.log(loaderUpdated.cssRules);\n    setLoaderInfo(loaderUpdated);\n  }, [loader, size, color]);\n\n  useEffect(() => {\n    if (loader) {\n      updateLoader();\n    }\n  }, [loader, size, updateLoader]);\n\n  const resetModal = () => {\n    setLoaderInfo(cloneDeep(loader));\n    updateSize(loader.size);\n    setColor(loader.color);\n    toggleColorPickerShow(false);\n  };\n\n  const updateSize = (sizeStr: string) => {\n    setSize(parseInt(sizeStr, 10));\n  };\n\n  const toggleColorPickerShow = (show: boolean) => {\n    setShowColorPicker(show);\n  };\n\n  return (\n    <Modal\n      show={modalShown}\n      size=\"lg\"\n      onHide={() => {\n        handleCloseModal();\n        resetModal();\n      }}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{loaderInfo?.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {Style.it(\n          loaderInfo?.cssRules,\n          <div className=\"modal-loader-wrapper\">\n            <div\n              className=\"modal-loader\"\n              dangerouslySetInnerHTML={{ __html: loaderInfo?.html || '' }}\n            />\n          </div>\n        )}\n\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"loaderSize\">\n            <Form.Label>Loader Size (px)</Form.Label>\n            <Form.Control\n              onChange={(e) => {\n                updateSize(e.target.value);\n              }}\n              defaultValue={size}\n              type=\"number\"\n              min={10}\n              max={500}\n              placeholder=\"Enter loader size\"\n            />\n          </Form.Group>\n          <Form.Label>Loader Color (Hex / Rgb)</Form.Label>\n          <InputGroup className=\"mb-3 color-picker-group\">\n            <Form.Control\n              ref={colorInputRef}\n              onChange={(e) => {\n                setColor(e.target.value);\n              }}\n              onFocus={() => {\n                toggleColorPickerShow(true);\n              }}\n              onBlur={() => {\n                setTimeout(() => {\n                  toggleColorPickerShow(false);\n                }, 200);\n              }}\n              value={color}\n              placeholder=\"Pick loader color\"\n            />\n            <InputGroup.Text\n              onClick={() => {\n                if (colorInputRef) {\n                  colorInputRef.current.focus();\n                }\n              }}\n            >\n              <div\n                style={{ backgroundColor: color, width: 20, height: 20 }}\n              ></div>\n            </InputGroup.Text>\n\n            {showColorPicker && (\n              <div className=\"color-picker-group__picker-container\">\n                <CirclePicker\n                  onChangeComplete={({ hex }) => {\n                    setColor(hex);\n                  }}\n                />\n              </div>\n            )}\n          </InputGroup>\n        </Form>\n        <h6 className=\"modal-html-text-header\">HTML</h6>\n        <div contentEditable={true} suppressContentEditableWarning={true}>\n          <div className=\"modal-html-text\">\n            {loaderInfo?.html}\n            <Badge\n              className=\"badge\"\n              contentEditable={false}\n              bg=\"secondary\"\n              onClick={() => {\n                navigator.clipboard.writeText(loaderInfo?.html || '');\n              }}\n            >\n              Copy\n            </Badge>{' '}\n          </div>\n        </div>\n        <div\n          style={{\n            marginTop: '10px',\n            marginBottom: '10px',\n            backgroundColor: '#333',\n            height: '1px',\n            width: '100%',\n          }}\n        ></div>\n        <h6 className=\"modal-css-text-header\">CSS</h6>\n        <pre\n          contentEditable={true}\n          suppressContentEditableWarning={true}\n          className=\"css-container\"\n        >\n          <Badge\n            className=\"badge\"\n            contentEditable={false}\n            bg=\"secondary\"\n            onClick={() => {\n              navigator.clipboard.writeText(loaderInfo?.cssRules || '');\n            }}\n          >\n            Copy\n          </Badge>{' '}\n          {loaderInfo?.cssRules}\n        </pre>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default LoaderInfo;\n","import Loaders from './Loaders';\n\nexport default Loaders;","import { useEffect, useState, Children, useRef, useCallback } from 'react';\nimport LoadersData from '../../constants/getLoadersData';\nimport './style.css';\nimport LoaderInfo from '../LoaderInfo';\nimport Loader from '../../classes/Loader';\n\nconst LoadersComponent = () => {\n  const [loaders, setLoaders] = useState<Loader[] | []>([]);\n  const [modalShown, setModalShown] = useState(false);\n\n  const handleCloseModal = () => setModalShown(false);\n  const handleShowModal = () => setModalShown(true);\n\n  const [selectedLoader, setSelectedLoader] = useState<Loader | null>(null);\n  const loaderContainerRef = useRef<HTMLDivElement>(null);\n\n  const addStyleOnDOM = useCallback(() => {\n    const styleEle = document.createElement('Style');\n    styleEle.innerText = loaders\n      .map((loaderData) => loaderData.cssRules)\n      .join('');\n    if (loaderContainerRef && loaderContainerRef.current) {\n      loaderContainerRef.current.append(styleEle);\n    }\n  }, [loaders]);\n\n  useEffect(() => {\n    setLoaders([...LoadersData]);\n  }, []);\n\n  useEffect(() => {\n    addStyleOnDOM();\n  }, [addStyleOnDOM]);\n\n  const showLoaderDetails = (loader: Loader) => {\n    setSelectedLoader(loader);\n    handleShowModal();\n  };\n\n  return (\n    <div ref={loaderContainerRef} className=\"loaders-container\">\n      {Children.toArray(\n        loaders.map((loaderData) => (\n          <div\n            className=\"loader-body\"\n            onClick={() => showLoaderDetails(loaderData)}\n          >\n            <div dangerouslySetInnerHTML={{ __html: loaderData.html }} />\n            <p className=\"source-text\">Source &#60;&#47;&#62;</p>\n          </div>\n        ))\n      )}\n      {selectedLoader && (\n        <LoaderInfo\n          loader={selectedLoader}\n          modalShown={modalShown}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LoadersComponent;\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import './LandingPage.css';\nimport Loaders from '../../components/Loaders';\n\nconst LandingPage = () => {\n  return (\n    <div className=\"landing-page\">\n      <div className=\"landing-page__content\">\n        <Loaders />\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","export default __webpack_public_path__ + \"static/media/iomechs-logo.7eca13a5.png\";","import Header from './Header';\n\nexport default Header;\n","import './style.css';\nimport logo from '../../assets/logo/iomechs-logo.png';\nimport GitHubButton from 'react-github-btn';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header_container\">\n        <a\n          href=\"https://iomechs.com\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          className=\"logo_container\"\n        >\n          <img className=\"logo\" src={logo} alt=\"IOMechs Logo\" />\n        </a>\n        <div className=\"title header_text\">Pure CSS Loaders (configurable)</div>\n        <div className=\"repo_link_container header_text\">\n          <span> Like Pure CSS Loaders? Give our repo a &nbsp; </span>\n          <GitHubButton\n            href=\"https://github.com/iomechs/pure-css-loaders\"\n            data-icon=\"octicon-star\"\n            aria-label=\"Star iomechs/pure-css-loaders on GitHub\"\n          >\n            Star\n          </GitHubButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport LandingPage from './containers/LandingPage';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './containers/Header';\n\nconst baseName = process.env.APP_BASE_NAME || '';\n\nfunction App() {\n  return (\n    <Router basename={baseName}>\n      <Header />\n      <div className=\"app\">\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-wrapper\">\n      <App />\n      <div className=\"credits\">\n        <h5>Credits:</h5>\n        <a\n          className=\"credit-link light\"\n          href=\"https://loading.io/css\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Based on Pure CSS Loaders\n        </a>\n        <a\n          className=\"credit-link light\"\n          href=\"https://www.freepik.com/vectors/background\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Background vector created by rocketpixel - www.freepik.com\n        </a>\n      </div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}